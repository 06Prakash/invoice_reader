version: "3.9"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev  # Use the development version of the backend
    container_name: invoice_reader_backend
    ports:
      - "5001:5000"  # Flask runs on port 5000, mapped to 5001
    volumes:
      - ./backend:/app  # Mount backend for live reload
      - ./migrations:/app/migrations
      - ./logs:/app/logs  # Persist logs
      - ./resources:/app/resources
      - ./uploads:/app/uploads  # Persist uploads
    env_file:
      - .env  # Load environment variables
    networks:
      - shared_network
    command: ["flask", "run", "--host=0.0.0.0", "--port=5000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health/check"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s  # Give Flask some time to start before checking

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: build-frontend
    container_name: invoice_reader_frontend
    image: node:18-alpine
    working_dir: /frontend
    volumes:
      - ./frontend:/frontend  # Live updates
      - /frontend/node_modules  # Keep node_modules in the container
    ports:
      - "3000:3000"  # Expose React development server
    command: ["npm", "start"]  # Run React dev server
    networks:
      - shared_network
    depends_on:
      backend:
        condition: service_healthy  # Wait for backend to be healthy

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: invoice_reader_celery
    depends_on:
      - backend
      - redis
    command: ["celery", "-A", "modules.services.background_service.celery_worker.celery_app", "worker", "--loglevel=info"]
    environment:
      - FLASK_DEBUG=1  # Replaces FLASK_ENV (deprecated)
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    networks:
      - shared_network

  redis:
    image: redis:latest
    container_name: redis_broker
    restart: always
    ports:
      - "6379:6379"
    networks:
      - shared_network

networks:
  shared_network:
    external: true
